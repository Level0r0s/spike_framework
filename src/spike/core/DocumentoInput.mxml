<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
    initialize="initializeHandler(event)"
    invalid="invalidHandler(event)"
    valid="validHandler(event)">

  <mx:Metadata>
    [Event(name="change", type="flash.events.Event")]
  </mx:Metadata>

  <mx:Script>
    <![CDATA[
      import mx.controls.TextInput;

      protected var textInputsIndexes:Array = new Array();
      protected var textInputs:Array = new Array();

      protected function initializeHandler(eventObj:Event):void {
        setTextInputsIndexes();
        var children:Array = getChildren();
        textInputsIndexes.forEach(function(i:int, index:Number, array:Array):void {
          textInputs.push(children[i] as TextInput);
        });

        validBorderColor = textInputs[0].getStyle('borderColor');
        validThemeColor = textInputs[0].getStyle('themeColor');
      }

      override public function setFocus():void {
        TextInput(textInputs[0]).setFocus();
      }

      protected function setTextInputsIndexes():void {
      }

      public function get text():String {
        var s:String = '';
        textInputs.forEach(function(t:TextInput, index:Number, array:Array):void {
          s += t.text;
        });
        return s;
      }

      public function set text(value:String):void {
        var currentStartIndex:int = 0;
        textInputs.forEach(function(t:TextInput, index:Number, array:Array):void {
          t.text = value.substr(currentStartIndex, t.maxChars);
          currentStartIndex += t.maxChars;
        });
      }

      protected var invalidBorderColor:Object = 'red';
      protected var invalidThemeColor:Object = 'red';
      protected var validBorderColor:Object;
      protected var validThemeColor:Object;

      protected function invalidHandler(eventObject:Event):void {
        textInputs.forEach(function(t:TextInput, index:Number, array:Array):void {
          t.setStyle('borderColor', invalidBorderColor);
          t.setStyle('themeColor', invalidThemeColor);
        });
      }

      protected function validHandler(eventObject:Event):void {
        textInputs.forEach(function(t:TextInput, index:Number, array:Array):void {
          t.setStyle('borderColor', validBorderColor);
          t.setStyle('themeColor', validThemeColor);
        });
      }

      protected function onFieldChange(event:Event):void {
        dispatchEvent(event);
        setFocusToNext(event.target as TextInput);
      }

      protected function setFocusToNext(currentTextInput:TextInput):void {
        if (currentTextInput.text.length == currentTextInput.maxChars) {
          var i:int = textInputs.indexOf(currentTextInput);
          if (i < (textInputs.length - 1))
            textInputs[i + 1].setFocus();
        }
      }
    ]]>
  </mx:Script>
</mx:Canvas>
